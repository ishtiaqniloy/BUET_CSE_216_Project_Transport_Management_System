
CREATE OR REPLACE FUNCTION CHECK_SENIORITY(EID IN VARCHAR2)
RETURN VARCHAR2 IS
			JOIN_DATE DATE;
			YEARS_WORKING NUMBER;
			EMP_EXIST NUMBER;
			RT_BOOL VARCHAR2(25);
			ERRMSG VARCHAR2(100);
BEGIN
			SELECT COUNT(*) INTO EMP_EXIST
			FROM EMPLOYEE
			WHERE EMPLOYEE_ID = EID;
			IF EMP_EXIST = 0 THEN
				RT_BOOL := 'FALSE';
			ELSIF EMP_EXIST > 1 THEN
				RT_BOOL := 'FALSE';
			ELSE
				SELECT HIRE_DATE INTO JOIN_DATE
				FROM EMPLOYEE
				WHERE EMPLOYEE_ID = EID;
				YEARS_WORKING := ROUND(MONTHS_BETWEEN(SYSDATE,JOIN_DATE)/12);
				IF YEARS_WORKING >= 9 THEN
					RT_BOOL := 'MORE SENIOR';
				ELSIF (YEARS_WORKING >= 5 AND YEARS_WORKING < 9) THEN
					RT_BOOL := 'LESS SENIOR';
				ELSE
					RT_BOOL := '';
				END IF;
			END IF;
		RETURN RT_BOOL;
EXCEPTION
		WHEN NO_DATA_FOUND THEN
		ERRMSG := 'No employee found.' ;
		WHEN TOO_MANY_ROWS THEN
		ERRMSG := 'More than one employee found.' ;
		WHEN OTHERS THEN
		ERRMSG := 'Some unknown error occurred.' ;
END;
/
CREATE OR REPLACE 
	PROCEDURE INCREASE_SALARY(P1 IN NUMBER,P2 IN NUMBER)
	IS
	RT_MSG VARCHAR2(100);
	BEGIN
		FOR R IN (SELECT EMPLOYEE_ID FROM EMPLOYEE)
		LOOP
			RT_MSG := CHECK_SENIORITY(R.EMPLOYEE_ID);
			IF (RT_MSG = 'MORE SENIOR') THEN
				UPDATE EMPLOYEE SET SALARY = SALARY + SALARY*P1 WHERE EMPLOYEE_ID = R.EMPLOYEE_ID;
			ELSIF (RT_MSG = 'LESS SENIOR') THEN
				UPDATE EMPLOYEE SET SALARY = SALARY + SALARY*P2 WHERE EMPLOYEE_ID = R.EMPLOYEE_ID;
			ELSIF(RT_MSG = 'NOT SENIOR') THEN
				UPDATE EMPLOYEE SET SALARY = SALARY*1.00 WHERE EMPLOYEE_ID = R.EMPLOYEE_ID;
			ELSE
				DBMS_OUTPUT.PUT_LINE('INPUT ERROR');
			END IF;
		END LOOP;
	COMMIT;
END;
/
DECLARE
BEGIN
		INCREASE_SALARY(0.2, 0.1);
END;
/
SELECT NAME,CHECK_SENIORITY(EMPLOYEE_ID),ROUND(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)/12) AS "YEARS",SALARY
FROM EMPLOYEE
ORDER BY NAME;
/	